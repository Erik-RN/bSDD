openapi: 3.0.1
info:
  title: Dictionaries API
  description: >-
    <p>API to access the buildingSMART Data Dictionary.</p><p>For manually
    uploading import files, please go to <a
    href="https://manage.bsdd.buildingsmart.org">bSDD Management portal</a>.
    Version history can be found at <a
    href="https://github.com/buildingSMART/bSDD/blob/master/API%20version%20history.md">Version
    history</a>.</p><p>If you have any questions or need further assistance,
    feel free to send us an e-mail</p>
  contact:
    name: Support
    url: https://github.com/buildingSMART/bSDD
    email: bsdd_support@buildingsmart.org
  license:
    name: MIT license
    url: >-
      https://bsddprototype2020.blob.core.windows.net/public/Copyright_2020_buildingSMART_International.txt
  version: v1
servers:
  - url: https://api.bsdd.buildingsmart.org/
paths:
  /api/Classification/v4:
    get:
      tags:
        - Classification
      summary: Get Classification details
      parameters:
        - name: namespaceUri
          in: query
          description: >-
            Namespace URI of the classification, e.g.
            https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/ifcwall
          required: true
          schema:
            type: string
        - name: includeChildClassificationReferences
          in: query
          description: Use this option to include references to child classifications
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v4'
  /api/Classification/v3:
    get:
      tags:
        - Classification
      summary: Get Classification details
      parameters:
        - name: namespaceUri
          in: query
          description: >-
            Namespace URI of the classification, e.g.
            https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/ifcwall
          required: true
          schema:
            type: string
        - name: includeChildClassificationReferences
          in: query
          description: Use this option to include references to child classifications
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassificationContract.v3'
  /api/ClassificationSearchOpen/v1:
    get:
      tags:
        - ClassificationSearch
      summary: >-
        Search the bSDD database using free text, get list of Classifications
        matching the text and optional additional filters
      parameters:
        - name: SearchText
          in: query
          description: >-
            The text to search for, minimum 3 characters (case and accent
            insensitive)
          required: true
          schema:
            type: string
        - name: DomainNamespaceUris
          in: query
          description: "List of domains to filter on.\r\nFor a classification to be found it must be part of one of the given domains"
          schema:
            type: array
            items:
              type: string
        - name: RelatedIfcEntities
          in: query
          description: "List of related IFC entities to filter on.\r\nFor a classification to be found it must have at least one of the given Related Ifc Entities"
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ClassificationSearchResponseContract.v1'
  /api/Country/v1:
    get:
      tags:
        - Country
      summary: Get list of all Countries
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryContract.v1'
  /api/Domain/v3:
    get:
      tags:
        - Domain
      summary: Get list of available Domains
      parameters:
        - name: namespaceUri
          in: query
          description: "Optional parameter to filter by first part of namespace URI. Use this one to get details of just one domain version\r\n            or, if you leave out the version number at the end, get all the versions of a domain."
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v3'
  /api/Domain/v3/Classifications:
    get:
      tags:
        - Domain
      summary: Get Domain with the classification and/or material tree
      parameters:
        - name: namespaceUri
          in: query
          description: Required parameter to select the domain.
          required: true
          schema:
            type: string
        - name: useNestedClassifications
          in: query
          description: >-
            Set to true if you want a tree of classifications, set to false to
            get a flat list of classifications
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            application/json:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            text/json:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            text/html:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            text/turtle:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v3'
  /api/Domain/v2:
    get:
      tags:
        - Domain
      summary: Get list of available Domains
      parameters:
        - name: namespaceUri
          in: query
          description: "Optional parameter to filter by first part of namespace URI. Use this one to get details of just one domain version\r\n            or, if you leave out the version number at the end, get all the versions of a domain."
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainContract.v2'
  /api/Domain/v2/Classifications:
    get:
      tags:
        - Domain
      summary: Get Domain with the classification tree
      parameters:
        - name: namespaceUri
          in: query
          description: Required parameter to select the domain.
          required: true
          schema:
            type: string
        - name: useNestedClassifications
          in: query
          description: >-
            Set to true if you want a tree of classifications, set to false to
            get a flat list of classifications
          schema:
            type: boolean
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/DomainWithClassificationsContract.v2'
  /api/Domain/v3/{organizationCode}/{code}/{version}:
    put:
      tags:
        - DomainUpdate
      summary: UpdateDomainStatus
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          The new status of the domain. Only transitions allowed are: Preview
          --> Active, Active --> Inactive and Inactive --> Active
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
    delete:
      tags:
        - DomainUpdate
      summary: Delete domain version
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
  /api/Domain/v3/{organizationCode}/{code}:
    delete:
      tags:
        - DomainUpdate
      summary: Delete all versions of domain
      parameters:
        - name: organizationCode
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security:
        - aad-jwt:
            - /manage
  /api/Language/v1:
    get:
      tags:
        - Language
      summary: Get list of available Languages
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LanguageContract.v1'
  /api/Material/v2:
    get:
      tags:
        - Material
      summary: Get Material details
      parameters:
        - name: namespaceUri
          in: query
          description: Namespace URI of the material
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: >-
            Language Code the result will be returned in. For items the
            translation is not available, the default language of the domain
            will be returned
          schema:
            type: string
        - name: includeChildMaterialReferences
          in: query
          description: Use this option to include references to child materials
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v2'
  /api/Material/v1:
    get:
      tags:
        - Material
      summary: Get Material details
      parameters:
        - name: namespaceUri
          in: query
          description: Namespace URI of the material
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: >-
            Language Code the result will be returned in. For items the
            translation is not available, the default language of the domain
            will be returned
          schema:
            type: string
        - name: includeChildMaterialReferences
          in: query
          description: Use this option to include references to child materials
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/MaterialContract.v1'
  /api/Material/SearchOpen/preview:
    get:
      tags:
        - MaterialSearch
      summary: Search the bSDD database, get list of Materials without details.
      description: "This is a preview version! Contracts may change.\r\nThe details can be requested per Material via the Material API"
      parameters:
        - name: DomainNamespaceUri
          in: query
          description: The namespace uri of the Domain to filter on (required)
          required: true
          schema:
            type: string
        - name: SearchText
          in: query
          description: The text to search for materials (case and accent insensitive)
          schema:
            type: string
        - name: LanguageCode
          in: query
          description: "The ISO language code to search in and to return the text in (case sensitive)\r\nIf no language code specified or the text is not available in the requested language, the text will be returned in the default language of the Domain.\r\nIf a language code has been given, the search takes place in texts of that language, otherwise searches will be done in the default language of the Domain.\r\nIf an invalid or not supported language code is given, a Bad Request will be returned."
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v1'
  /api/Property/v3:
    get:
      tags:
        - Property
      summary: Get Property details
      parameters:
        - name: namespaceUri
          in: query
          description: >-
            Namespace URI of the property, e.g.
            http://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/prop/AirConditioning
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v3'
  /api/Property/v2:
    get:
      tags:
        - Property
      summary: Get Property details
      parameters:
        - name: namespaceUri
          in: query
          description: >-
            Namespace URI of the property, e.g.
            https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/prop/AirConditioning
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: >-
            Specify language (case sensitive). For those items the text is not
            available in the requested language, the text will be returned in
            the default language of the domain
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyContract.v2'
  /api/PropertyValue/v1:
    get:
      tags:
        - PropertyValue
      summary: Get Property Value details
      parameters:
        - name: namespaceUri
          in: query
          description: Namespace URI of the property value
          required: true
          schema:
            type: string
        - name: languageCode
          in: query
          description: Language Code
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PropertyValueContract.v1'
  /api/ReferenceDocument/v1:
    get:
      tags:
        - ReferenceDocument
      summary: Get list of all ReferenceDocuments
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceDocumentContract.v1'
  /api/RequestExportFile/preview:
    post:
      tags:
        - RequestExportFile
      summary: "PREVIEW\r\nRequest a file with an export of a domain.\r\nOnly format \"Sketchup\" is supported. You get an export in xsd format with limited content."
      parameters:
        - name: DomainNamespaceUri
          in: query
          description: The namespace uri of the domain to be downloaded
          required: true
          schema:
            type: string
        - name: ExportFormat
          in: query
          description: "Select the Export Format you want the result in.\r\nOnly support format is Sketchup\r\nField can be left empty"
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string
                format: binary
            text/turtle:
              schema:
                type: string
                format: binary
            application/x-turtle:
              schema:
                type: string
                format: binary
            application/rdf+xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Server Error
      security:
        - aad-jwt:
            - /read
  /api/SearchList/v2:
    get:
      tags:
        - SearchList
      summary: "Secured version of the \"Search List API\".\r\nSearch the bSDD database, get list of Classifications without details."
      description: >-
        The details can be requested per Classification via the Classification
        API
      parameters:
        - name: DomainNamespaceUri
          in: query
          description: The namespace uri of the Domain to filter on (required)
          required: true
          schema:
            type: string
        - name: SearchText
          in: query
          description: The text to search for (case and accent insensitive)
          schema:
            type: string
        - name: LanguageCode
          in: query
          description: "The ISO language code to search in and to return the text in (case sensitive)\r\nIf no language code specified or the text is not available in the requested language, the text will be returned in the default language of the Domain.\r\nIf a language code has been given, the search takes place in texts of that language, otherwise searches will be done in the default language of the Domain.\r\nIf an invalid or not supported language code is given, a Bad Request will be returned."
          schema:
            type: string
        - name: RelatedIfcEntity
          in: query
          description: The official IFC entity name to filter on (case sensitive)
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
      security:
        - aad-jwt:
            - /read
  /api/SearchListOpen/v2:
    get:
      tags:
        - SearchList
      summary: Search the bSDD database, get list of Classifications without details.
      description: >-
        The details can be requested per Classification via the Classification
        API
      parameters:
        - name: DomainNamespaceUri
          in: query
          description: The namespace uri of the Domain to filter on (required)
          required: true
          schema:
            type: string
        - name: SearchText
          in: query
          description: The text to search for (case and accent insensitive)
          schema:
            type: string
        - name: LanguageCode
          in: query
          description: "The ISO language code to search in and to return the text in (case sensitive)\r\nIf no language code specified or the text is not available in the requested language, the text will be returned in the default language of the Domain.\r\nIf a language code has been given, the search takes place in texts of that language, otherwise searches will be done in the default language of the Domain.\r\nIf an invalid or not supported language code is given, a Bad Request will be returned."
          schema:
            type: string
        - name: RelatedIfcEntity
          in: query
          description: The official IFC entity name to filter on (case sensitive)
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/html:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            text/turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/SearchResultContract.v2'
  /api/TextSearchListOpen/v6:
    get:
      tags:
        - TextSearchList
      summary: >-
        Search the bSDD database using free text, get list of Classifications
        and/or Properties matching the text.
      description: >-
        The details can be requested per Classification via the Classification
        API
      parameters:
        - name: SearchText
          in: query
          description: >-
            The text to search for, minimum 3 characters (case and accent
            insensitive)
          required: true
          schema:
            type: string
        - name: TypeFilter
          in: query
          description: >-
            Type filter: must be "All", "Classifications", "Materials" or
            "Properties"
          schema:
            type: string
        - name: DomainNamespaceUris
          in: query
          description: List of domain to filter on
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            application/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            text/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            application/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            text/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            text/html:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            text/turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v6'
  /api/TextSearchListOpen/v5:
    get:
      tags:
        - TextSearchList
      summary: >-
        Search the bSDD database using free text, get list of Classifications
        and/or Properties matching the text.
      description: >-
        The details can be requested per Classification via the Classification
        API
      parameters:
        - name: SearchText
          in: query
          description: >-
            The text to search for, minimum 3 characters (case and accent
            insensitive)
          required: true
          schema:
            type: string
        - name: TypeFilter
          in: query
          description: 'Type filter: must be "All", "Classifications" or "Properties"'
          schema:
            type: string
        - name: DomainNamespaceUris
          in: query
          description: List of domain to filter on
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            application/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            text/json:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            application/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            text/xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            text/html:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            text/turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/TextSearchResponseContract.v5'
  /api/Unit/v1:
    get:
      tags:
        - Unit
      summary: Get list of all units
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            text/turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/x-turtle:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
            application/rdf+xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitContract.v1'
  /api/UploadImportFile/v1:
    post:
      tags:
        - UploadImportFile
      summary: >-
        Upload a bSDD import model json file, see
        https://github.com/buildingSMART/bSDD/tree/master/Model/Import%20Model
        for more information
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - FormFile
                - OrganizationCode
              type: object
              properties:
                OrganizationCode:
                  type: string
                  description: "Code of the organization owning the domain.\r\nIf you do not know the code, contact us (see e-mail address on top of this page)"
                FormFile:
                  type: string
                  description: The bsdd import file in json format
                  format: binary
                ValidateOnly:
                  type: boolean
                  description: "Set to true if you only want to validate the file. Even when there are no validation errors the file wil not be imported.\r\nThe validation result will not be send via e-mail."
            encoding:
              OrganizationCode:
                style: form
              FormFile:
                style: form
              ValidateOnly:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/json:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/html:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            text/turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/x-turtle:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/UploadImportFileResult.v1'
      security:
        - aad-jwt:
            - /read
components:
  schemas:
    ClassificationContract.v3:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        classificationType:
          type: string
          description: Type of Classification
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the classification
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          description: List of related IFC entity names (version independent)
          nullable: true
        parentClassificationReference:
          $ref: '#/components/schemas/ClassificationReferenceContract.v3'
        classificationProperties:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyContract.v3'
          description: List of the properties of this classification
          nullable: true
        classificationRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationRelationContract.v3'
          description: >-
            List of relations to other classifications, can be reference to
            classifications of other domains
          nullable: true
        childClassificationReferences:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationReferenceContract.v3'
          description: List of child classifications (only filled if requested)
          nullable: true
      additionalProperties: false
    ClassificationContract.v4:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        classificationType:
          type: string
          description: Type of Classification
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the classification
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          description: List of related IFC entity names (version independent)
          nullable: true
        parentClassificationReference:
          $ref: '#/components/schemas/ClassificationReferenceContract.v4'
        classificationProperties:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyContract.v4'
          description: List of the properties of this classification
          nullable: true
        classificationRelations:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationRelationContract.v4'
          description: >-
            List of relations to other classifications, can be reference to
            classifications of other domains
          nullable: true
        childClassificationReferences:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationReferenceContract.v4'
          description: List of child classifications (only filled if requested)
          nullable: true
      additionalProperties: false
    ClassificationListItemContract.v2:
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          nullable: true
        parentClassificationCode:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationListItemContract.v2'
          nullable: true
      additionalProperties: false
    ClassificationListItemContract.v3:
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          nullable: true
        parentClassificationCode:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationListItemContract.v3'
          nullable: true
      additionalProperties: false
    ClassificationPropertyContract.v3:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the classification
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        possibleValues:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyValueContract.v3'
          description: "List of possible values\r\nThis list does not need to be the same as the list of PossibleValues in the Property contract\r\nbecause this list can be overruled at Classification-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the classification can have only one value for
            this property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            domain as the classification.
          nullable: true
        propertyDomainName:
          type: string
          description: Name of the Domain this property belongs to
          nullable: true
        propertyNamespaceUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    ClassificationPropertyContract.v4:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        namespaceUri:
          type: string
          nullable: true
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the classification
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Classification-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationPropertyValueContract.v4'
          description: "List of allowed values\r\nThis list does not need to be the same as the list of AllowedValues in the Property contract\r\nbecause this list can be overruled at Classification-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the classification can have only one value for
            this property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            domain as the classification.
          nullable: true
        propertyDomainName:
          type: string
          description: Name of the Domain this property belongs to
          nullable: true
        propertyNamespaceUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    ClassificationPropertyValueContract.v3:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Possible value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    ClassificationPropertyValueContract.v4:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    ClassificationReferenceContract.v3:
      required:
        - namespaceUri
      type: object
      properties:
        namespaceUri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ClassificationReferenceContract.v4:
      required:
        - namespaceUri
      type: object
      properties:
        namespaceUri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ClassificationRelationContract.v3:
      required:
        - relatedClassificationUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassificationUri:
          minLength: 1
          type: string
          description: Namespace URI of the related classification
        relatedClassificationName:
          type: string
          description: Name of the related classification
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the classification relations of one relation
            type
          format: double
          nullable: true
      additionalProperties: false
    ClassificationRelationContract.v4:
      required:
        - relatedClassificationUri
        - relationType
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassificationUri:
          minLength: 1
          type: string
          description: Namespace URI of the related classification
        relatedClassificationName:
          type: string
          description: Name of the related classification
          nullable: true
        fraction:
          type: number
          description: >-
            Optional provision of a fraction of the total amount (e.g. volume or
            weight) that applies to the classification relations of one relation
            type
          format: double
          nullable: true
      additionalProperties: false
    ClassificationSearchResponseClassificationContract.v1:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Unique identification of the domain the classification belongs to
          nullable: true
        domainName:
          type: string
          description: Name of the domain the classification belongs to
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        namespaceUri:
          type: string
          description: Unique identification of the classification
          nullable: true
        classificationType:
          type: string
          description: Type of the classification.
          nullable: true
        description:
          type: string
          nullable: true
        parentClassificationName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ClassificationSearchResponseContract.v1:
      type: object
      properties:
        classifications:
          type: array
          items:
            $ref: >-
              #/components/schemas/ClassificationSearchResponseClassificationContract.v1
          description: The list of Classifications found
          nullable: true
      additionalProperties: false
    ClassificationSearchResultContract.v2:
      type: object
      properties:
        name:
          type: string
          description: Name of the Classification
          nullable: true
        namespaceUri:
          type: string
          description: Unique identification of the Classification
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        classificationType:
          type: string
          description: Type of the classification.
          nullable: true
        definition:
          type: string
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CountryContract.v1:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    DomainContract.v2:
      required:
        - defaultLanguageCode
        - name
        - organizationNameOwner
        - version
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: URL where you can find more details about the license
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
      additionalProperties: false
    DomainContract.v3:
      required:
        - defaultLanguageCode
        - name
        - organizationCodeOwner
        - organizationNameOwner
        - version
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationCodeOwner:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: URL where you can find more details about the license
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
      additionalProperties: false
    DomainSearchResultContract.v1:
      type: object
      properties:
        name:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialSearchResultContract.v1'
          nullable: true
      additionalProperties: false
    DomainSearchResultContract.v2:
      type: object
      properties:
        name:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationSearchResultContract.v2'
          nullable: true
      additionalProperties: false
    DomainWithClassificationsContract.v2:
      required:
        - defaultLanguageCode
        - name
        - organizationNameOwner
        - version
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: URL where you can find more details about the license
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationListItemContract.v2'
          nullable: true
      additionalProperties: false
    DomainWithClassificationsContract.v3:
      required:
        - defaultLanguageCode
        - name
        - organizationCodeOwner
        - organizationNameOwner
        - version
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        organizationCodeOwner:
          minLength: 1
          type: string
        organizationNameOwner:
          minLength: 1
          type: string
        defaultLanguageCode:
          minLength: 1
          type: string
          description: The default language for this domain
        license:
          type: string
          description: >-
            Name or short description of the license under which you can use
            this data
          nullable: true
        licenseUrl:
          type: string
          description: URL where you can find more details about the license
          nullable: true
        qualityAssuranceProcedure:
          type: string
          description: >-
            Name or short description of the quality assurance procedure used
            while creating and maintaining the domain data
          nullable: true
        qualityAssuranceProcedureUrl:
          type: string
          description: >-
            URL where you can find more details about the quality assurance
            procedure
          nullable: true
        status:
          type: string
          description: >-
            For state indication, like "Preview", "Active", "InActive",
            "Released
          nullable: true
        moreInfoUrl:
          type: string
          description: Url to site with more info on domain
          nullable: true
        releaseDate:
          type: string
          description: Date of the release of this version
          format: date-time
          nullable: true
        lastUpdatedUtc:
          type: string
          description: Date and time the data of the domain has been last updated in bSDD
          format: date-time
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationListItemContract.v3'
          nullable: true
        materials:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationListItemContract.v3'
          nullable: true
      additionalProperties: false
    LanguageContract.v1:
      required:
        - isoCode
      type: object
      properties:
        isoCode:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
      additionalProperties: false
    MaterialClassificationRelationContract.v1:
      type: object
      properties:
        name:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
      additionalProperties: false
    MaterialContract.v1:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the material
          nullable: true
        parentMaterialReference:
          $ref: '#/components/schemas/MaterialReferenceContract.v1'
        materialProperties:
          type: array
          items:
            $ref: '#/components/schemas/MaterialPropertyContract.v1'
          description: List of the properties of this material
          nullable: true
        classificationRelations:
          type: array
          items:
            $ref: '#/components/schemas/MaterialRelationContract.v1'
          description: >-
            List of relations to classifications, can be reference to materials
            of other domains
          nullable: true
        childMaterialReferences:
          type: array
          items:
            $ref: '#/components/schemas/MaterialReferenceContract.v1'
          description: List of child materials (only filled if requested)
          nullable: true
      additionalProperties: false
    MaterialContract.v2:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms for the material
          nullable: true
        parentMaterialReference:
          $ref: '#/components/schemas/MaterialReferenceContract.v2'
        materialProperties:
          type: array
          items:
            $ref: '#/components/schemas/MaterialPropertyContract.v2'
          description: List of the properties of this material
          nullable: true
        classificationRelations:
          type: array
          items:
            $ref: '#/components/schemas/MaterialRelationContract.v2'
          description: >-
            List of relations to classifications, can be reference to materials
            of other domains
          nullable: true
        childMaterialReferences:
          type: array
          items:
            $ref: '#/components/schemas/MaterialReferenceContract.v2'
          description: List of child materials (only filled if requested)
          nullable: true
      additionalProperties: false
    MaterialPropertyContract.v1:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the material
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        possibleValues:
          type: array
          items:
            $ref: '#/components/schemas/MaterialPropertyValueContract.v1'
          description: "List of possible values\r\nThis list does not need to be the same as the list of PossibleValues in the Property contract\r\nbecause this list can be overruled at Material-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the material can have only one value for this
            property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            domain as the material.
          nullable: true
        propertyDomainName:
          type: string
          description: Name of the Domain this property belongs to
          nullable: true
        propertyNamespaceUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
      additionalProperties: false
    MaterialPropertyContract.v2:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the property
        description:
          type: string
          description: "Plain language description of the property.\r\nIf at Property level no description has been given but a \"Definition\" is available, then \"Definition\" is returned as description"
          nullable: true
        dataType:
          type: string
          description: Format for expressing the value of the property
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        isRequired:
          type: boolean
          description: Indicates if this property is required for the material
          nullable: true
        isWritable:
          type: boolean
          description: Indicates if the value of the property can be changed by the user
          nullable: true
        maxExclusive:
          type: number
          description: "Maximum value of the property, exclusive\r\nThis value does not need to be the same as the MaxExclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: "Maximum value of the property, inclusive\r\nThis value does not need to be the same as the MaxInclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        minExclusive:
          type: number
          description: "Minimum value of the property, exclusive\r\nThis value does not need to be the same as the MinExclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        minInclusive:
          type: number
          description: "Minimum value of the property, inclusive\r\nThis value does not need to be the same as the MinInclusive in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html.\r\nThis value does not need to be the same as the Pattern in the Property contract\r\nbecause this value can be overruled at Material-Property level to define a more strict value."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/MaterialPropertyValueContract.v2'
          description: "List of allowed values\r\nThis list does not need to be the same as the list of AllowedValues in the Property contract\r\nbecause this list can be overruled at Material-Property level to define a more strict list."
          nullable: true
        predefinedValue:
          type: string
          description: >-
            Predefined value: if the material can have only one value for this
            property, this is it
          nullable: true
        propertyCode:
          type: string
          description: >-
            Code of the property, only applicable if property is of the same
            domain as the material.
          nullable: true
        propertyDomainName:
          type: string
          description: Name of the Domain this property belongs to
          nullable: true
        propertyNamespaceUri:
          type: string
          description: Unique identification of the property
          nullable: true
        propertySet:
          type: string
          description: Name of the Property Set
          nullable: true
        propertyStatus:
          type: string
          description: 'Status of the property: Preview, Active or Inactive'
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        symbol:
          type: string
          description: Symbol of the property
          nullable: true
        units:
          type: array
          items:
            type: string
          description: List of units to select from
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes to select from
          nullable: true
      additionalProperties: false
    MaterialPropertyValueContract.v1:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Possible value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    MaterialPropertyValueContract.v2:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: Sort number of value within the list of values for the Property
          format: int32
          nullable: true
      additionalProperties: false
    MaterialReferenceContract.v1:
      required:
        - namespaceUri
      type: object
      properties:
        namespaceUri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    MaterialReferenceContract.v2:
      required:
        - namespaceUri
      type: object
      properties:
        namespaceUri:
          minLength: 1
          type: string
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    MaterialRelationContract.v1:
      required:
        - relatedClassificationUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassificationUri:
          minLength: 1
          type: string
          description: Namespace URI of the related classification
        relatedClassificationName:
          type: string
          description: Name of the related classification
          nullable: true
      additionalProperties: false
    MaterialRelationContract.v2:
      required:
        - relatedClassificationUri
        - relationType
      type: object
      properties:
        relationType:
          minLength: 1
          type: string
          description: >-
            Can be one of: HasReference, IsEqualTo, IsSynonymOf, IsParentOf,
            IsChildOf, HasPart
        relatedClassificationUri:
          minLength: 1
          type: string
          description: Namespace URI of the related classification
        relatedClassificationName:
          type: string
          description: Name of the related classification
          nullable: true
      additionalProperties: false
    MaterialSearchResultContract.v1:
      type: object
      properties:
        name:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
        definition:
          type: string
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          nullable: true
        relatedClassifications:
          type: array
          items:
            $ref: '#/components/schemas/MaterialClassificationRelationContract.v1'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    PropertyContract.v2:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        description:
          type: string
          description: Plain language description of the property.
          nullable: true
        connectedPropertyCodes:
          type: array
          items:
            type: string
          description: List of connected property codes
          nullable: true
        dataType:
          type: string
          description: >-
            Format for expressing the value of the property: Boolean, Character,
            Date, Enumeration, Integer, Real, String, Time
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        maxExclusive:
          type: number
          description: Maximum value of the property, exclusive
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: Maximum value of the property, inclusive
          format: double
          nullable: true
        methodOfMeasurement:
          type: string
          description: Description of the method of measurement
          nullable: true
        minExclusive:
          type: number
          description: Minimum value of the property, exclusive
          format: double
          nullable: true
        minInclusive:
          type: number
          description: Minimum value of the property, inclusive
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        possibleValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValueContract.v2'
          description: List of possible values
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        propertyRelations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationContract.v2'
          description: List of relations with other properties
          nullable: true
        textFormat:
          type: string
          description: The text type, e.g. UTF-8
          nullable: true
        units:
          type: array
          items:
            type: string
          description: Multiple references to Unit
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes (if QUDT code available)
          nullable: true
      additionalProperties: false
    PropertyContract.v3:
      required:
        - activationDateUtc
        - code
        - name
        - namespaceUri
        - status
        - versionDateUtc
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Namespace URI of the domain
          nullable: true
        activationDateUtc:
          type: string
          description: Date of activation
          format: date-time
        code:
          minLength: 1
          type: string
          description: Code used originally by the domain
        creatorLanguageCode:
          type: string
          description: Language code of the creator
          nullable: true
        countriesOfUse:
          type: array
          items:
            type: string
          description: List of countries where used
          nullable: true
        countryOfOrigin:
          type: string
          description: Country of origin
          nullable: true
        deActivationDateUtc:
          type: string
          description: Date of deactivation
          format: date-time
          nullable: true
        definition:
          type: string
          description: Definition
          nullable: true
        deprecationExplanation:
          type: string
          description: Explanation of the deprecation
          nullable: true
        documentReference:
          type: string
          description: Reference to a(n official) document
          nullable: true
        name:
          minLength: 1
          type: string
          description: Name
        namespaceUri:
          minLength: 1
          type: string
          description: Unique identification
        replacedObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replaced items
          nullable: true
        replacingObjectCodes:
          type: array
          items:
            type: string
          description: List of codes of the replacing items
          nullable: true
        revisionDateUtc:
          type: string
          description: Date of the revision
          format: date-time
          nullable: true
        revisionNumber:
          type: integer
          description: Revision number
          format: int32
          nullable: true
        status:
          minLength: 1
          type: string
          description: 'Status, can be: Preview, Active or Inactive'
        subdivisionsOfUse:
          type: array
          items:
            type: string
          description: List of subdivisions (e.g. states) where used
          nullable: true
        uid:
          type: string
          description: Alternative unique global identification
          nullable: true
        versionDateUtc:
          type: string
          description: Date of the version
          format: date-time
        versionNumber:
          type: integer
          description: Version number
          format: int32
          nullable: true
        visualRepresentationUri:
          type: string
          description: URI of a visual representation
          nullable: true
        description:
          type: string
          description: Plain language description of the property.
          nullable: true
        connectedPropertyCodes:
          type: array
          items:
            type: string
          description: List of connected property codes
          nullable: true
        dataType:
          type: string
          description: >-
            Format for expressing the value of the property: Boolean, Character,
            Date, Enumeration, Integer, Real, String, Time
          nullable: true
        dimension:
          type: string
          description: "Dimension of the physical quantity in format \"L M T I Θ N J\", for example \"-2 1 0 0 0 0 0\".\r\nWith\r\n  L   Length\r\n  M   Mass\r\n  T   Time\r\n  I   Electric current\r\n  Θ   Thermodynamic Temperature\r\n  N   Amount of substance\r\n  J   Luminous intensity"
          nullable: true
        dimensionLength:
          type: integer
          description: The Length value of the dimension
          format: int32
          nullable: true
        dimensionMass:
          type: integer
          description: The Mass value of the dimension
          format: int32
          nullable: true
        dimensionTime:
          type: integer
          description: The Time value of the dimension
          format: int32
          nullable: true
        dimensionElectricCurrent:
          type: integer
          description: The Electric current value of the dimension
          format: int32
          nullable: true
        dimensionThermodynamicTemperature:
          type: integer
          description: The Thermodynamic temperature value of the dimension
          format: int32
          nullable: true
        dimensionAmountOfSubstance:
          type: integer
          description: The Amount of substance value of the dimension
          format: int32
          nullable: true
        dimensionLuminousIntensity:
          type: integer
          description: The Luminous intensity value of the dimension
          format: int32
          nullable: true
        dynamicParameterPropertyCodes:
          type: array
          items:
            type: string
          description: "List of codes of the properties which are parameters of the function for a dynamic property.\r\nOnly applicable for dynamic properties (IsDynamic)"
          nullable: true
        example:
          type: string
          description: Illustrate possible use or values of the Property
          nullable: true
        isDynamic:
          type: boolean
          description: >-
            True if the value of this property is dependent on other properties
            (as provided in DynamicParameterPropertyCodes)
          nullable: true
        maxExclusive:
          type: number
          description: Maximum value of the property, exclusive
          format: double
          nullable: true
        maxInclusive:
          type: number
          description: Maximum value of the property, inclusive
          format: double
          nullable: true
        methodOfMeasurement:
          type: string
          description: Description of the method of measurement
          nullable: true
        minExclusive:
          type: number
          description: Minimum value of the property, exclusive
          format: double
          nullable: true
        minInclusive:
          type: number
          description: Minimum value of the property, inclusive
          format: double
          nullable: true
        pattern:
          type: string
          description: "An XML Schema Regular expression for the property value.\r\nSee for explanation: https://www.regular-expressions.info/xml.html."
          nullable: true
        physicalQuantity:
          type: string
          description: The quantity in plain text
          nullable: true
        allowedValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValueContract.v3'
          description: List of allowed values
          nullable: true
        propertyValueKind:
          type: string
          description: >-
            Indicates kind of value: Single, Range (2 values expected), List
            (multiple values expected), Complex (use in combination with
            "ConnectedProperties"), ComplexList
          nullable: true
        propertyRelations:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationContract.v3'
          description: List of relations with other properties
          nullable: true
        textFormat:
          type: string
          description: The text type, e.g. UTF-8
          nullable: true
        units:
          type: array
          items:
            type: string
          description: Multiple references to Unit
          nullable: true
        qudtCodes:
          type: array
          items:
            type: string
          description: List of QUDT unit codes (if QUDT code available)
          nullable: true
      additionalProperties: false
    PropertyRelationContract.v2:
      type: object
      properties:
        relationType:
          type: string
          description: 'The relation with the other property: e.g. HasReference, IsEqualTo'
          nullable: true
        relatedPropertyUri:
          type: string
          description: Namespace URI of the related property
          nullable: true
        relatedPropertyName:
          type: string
          description: Name of the related property
          nullable: true
      additionalProperties: false
    PropertyRelationContract.v3:
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        relationType:
          type: string
          description: 'The relation with the other property: e.g. HasReference, IsEqualTo'
          nullable: true
        relatedPropertyUri:
          type: string
          description: Namespace URI of the related property
          nullable: true
        relatedPropertyName:
          type: string
          description: Name of the related property
          nullable: true
      additionalProperties: false
    PropertyValueContract.v1:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value (unique within the property)
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: >-
            (Optional) Sort number of value within the list of values for the
            Property
          format: int32
          nullable: true
      additionalProperties: false
    PropertyValueContract.v2:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value (if present)
          nullable: true
        code:
          type: string
          description: Identification of the value (unique within the property)
          nullable: true
        value:
          minLength: 1
          type: string
          description: Possible value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: >-
            (Optional) Sort number of value within the list of values for the
            Property
          format: int32
          nullable: true
      additionalProperties: false
    PropertyValueContract.v3:
      required:
        - value
      type: object
      properties:
        namespaceUri:
          type: string
          description: Globally unique identification of the value
          nullable: true
        code:
          type: string
          description: Identification of the value (unique within the property)
          nullable: true
        value:
          minLength: 1
          type: string
          description: Allowed value of the property
        description:
          type: string
          description: Description of the value
          nullable: true
        sortNumber:
          type: integer
          description: >-
            (Optional) Sort number of value within the list of values for the
            Property
          format: int32
          nullable: true
      additionalProperties: false
    ReferenceDocumentContract.v1:
      type: object
      properties:
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    SearchResultContract.v1:
      type: object
      properties:
        numberOfMaterialsFound:
          type: integer
          description: The total number of Materials matching the search criteria
          format: int32
        domains:
          type: array
          items:
            $ref: '#/components/schemas/DomainSearchResultContract.v1'
          description: The list of Domains with found Materials and Material Properties
          nullable: true
      additionalProperties: false
    SearchResultContract.v2:
      type: object
      properties:
        numberOfClassificationsFound:
          type: integer
          description: The total number of Classifications matching the search criteria
          format: int32
        domains:
          type: array
          items:
            $ref: '#/components/schemas/DomainSearchResultContract.v2'
          description: >-
            The list of Domains with found Classification and
            ClassificationProperties
          nullable: true
      additionalProperties: false
    TextSearchResponseClassificationContract.v5:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Unique identification of the domain the classification belongs to
          nullable: true
        domainName:
          type: string
          description: Name of the domain the classification belongs to
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        namespaceUri:
          type: string
          description: Unique identification of the classification
          nullable: true
        classificationType:
          type: string
          description: Type of the classification.
          nullable: true
        description:
          type: string
          nullable: true
        parentClassificationName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseClassificationContract.v6:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Unique identification of the domain the classification belongs to
          nullable: true
        domainName:
          type: string
          description: Name of the domain the classification belongs to
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        namespaceUri:
          type: string
          description: Unique identification of the classification
          nullable: true
        classificationType:
          type: string
          description: Type of the classification.
          nullable: true
        description:
          type: string
          nullable: true
        parentClassificationName:
          type: string
          nullable: true
        relatedIfcEntityNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseContract.v5:
      type: object
      properties:
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseClassificationContract.v5'
          description: The list of Classifications found
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseDomainContract.v5'
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponsePropertyContract.v5'
          nullable: true
      additionalProperties: false
    TextSearchResponseContract.v6:
      type: object
      properties:
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseClassificationContract.v6'
          description: The list of Classifications found
          nullable: true
        domains:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseDomainContract.v6'
          description: The list of Domains with found results
          nullable: true
        materials:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponseMaterialContract.v6'
          description: The list of Materials found
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/TextSearchResponsePropertyContract.v6'
          description: List of Properties found
          nullable: true
      additionalProperties: false
    TextSearchResponseDomainContract.v5:
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseDomainContract.v6:
      type: object
      properties:
        namespaceUri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponseMaterialContract.v6:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          description: Unique identification of the domain the material belongs to
          nullable: true
        domainName:
          type: string
          description: Name of the domain the material belongs to
          nullable: true
        name:
          type: string
          nullable: true
        referenceCode:
          type: string
          description: Code that can be used for domain specific purposes
          nullable: true
        namespaceUri:
          type: string
          description: Unique identification of the material
          nullable: true
        description:
          type: string
          nullable: true
        parentMaterialName:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponsePropertyContract.v5:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          nullable: true
        domainName:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    TextSearchResponsePropertyContract.v6:
      type: object
      properties:
        domainNamespaceUri:
          type: string
          nullable: true
        domainName:
          type: string
          nullable: true
        namespaceUri:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    UnitContract.v1:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        symbol:
          type: string
          nullable: true
        qudtUri:
          type: string
          nullable: true
      additionalProperties: false
    UploadImportFileResult.v1:
      type: object
      properties:
        isOk:
          type: boolean
          description: "Indicates if the file will be imported.\r\nWarnings are allowed, import will continue but may lead to undesired values in the database."
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: "The list of errors found.\r\nIt may happen that if you fix one error new errors will be discovered."
          nullable: true
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: "List of warnings.\r\nIt is best to have no warnings at all to avoid inconsistent or incorrect values in the database"
          nullable: true
        informationalMessages:
          type: array
          items:
            $ref: '#/components/schemas/UploadImportFileResultItem.v1'
          description: Informational messages
          nullable: true
      additionalProperties: false
    UploadImportFileResultItem.v1:
      type: object
      properties:
        attribute:
          type: string
          description: The attribute the message applies to
          nullable: true
        message:
          type: string
          description: The message
          nullable: true
      additionalProperties: false
  securitySchemes:
    aad-jwt:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: >-
            https://authentication.buildingsmart.org/buildingsmartservices.onmicrosoft.com/b2c_1a_signupsignin_c/oauth2/v2.0/authorize
          scopes:
            https://buildingSMARTservices.onmicrosoft.com/bsddapi/read: ''
